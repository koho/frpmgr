name: Releaser

on:
  release:
    types: [published]

  workflow_dispatch:

  push:
    branches:
      - '*'

jobs:
  build:
    name: Build
    runs-on: windows-latest
    outputs:
      version: ${{ steps.build.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Go environment
        uses: actions/setup-go@v3.0.0
        with:
          go-version: '1.20'

      - name: Setup VS environment
        shell: cmd
        run: |
          for /f "usebackq delims=" %%i in (`vswhere.exe -latest -property installationPath`) do echo %%i\VC\Auxiliary\Build>>%GITHUB_PATH%

      - name: Build
        id: build
        shell: cmd
        run: |
          set GOPATH=%USERPROFILE%\go
          echo ::set-output name=version::%GITHUB_REF:~11%
          build.bat

      - uses: actions/upload-artifact@v3
        with:
          name: asset
          path: bin/*.exe

  checksum:
    name: Checksum
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: asset

      - name: Calculate SHA256 checksum
        working-directory: bin
        run: sha256sum *.exe > frpmgr-${{ needs.build.outputs.version }}-sha256-checksums.txt

      - uses: actions/upload-artifact@v3
        with:
          name: sha256-checksums.txt
          path: bin/frpmgr-${{ needs.build.outputs.version }}-sha256-checksums.txt

  release:
    name: Release
    needs: [build, checksum]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        file:
          - name: setup-x64.exe
            type: application/octet-stream
          - name: setup-x86.exe
            type: application/octet-stream
          - name: sha256-checksums.txt
            type: text/plain
    steps:
      - uses: actions/download-artifact@v3

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: bin/frpmgr-${{ needs.build.outputs.version }}-${{ matrix.file.name }}
          asset_name: frpmgr-${{ needs.build.outputs.version }}-${{ matrix.file.name }}
          asset_content_type: ${{ matrix.file.type }}
